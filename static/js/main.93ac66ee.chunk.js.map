{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","buttonLabel","toggleshowingDetails","setState","eventData","this","props","Container","Row","Col","Accordion","Card","className","Header","summary","start","dateTime","end","timeZone","Toggle","as","Button","variant","eventKey","onClick","Collapse","Body","Title","Text","description","Subtitle","href","target","rel","organizer","email","htmlLink","Component","EventList","events","number","slice","map","event","id","Alert","getStyle","color","style","text","InfoAlert","fontWeight","fontSize","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","locations","filter","location","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","Form","Group","controlId","Label","column","md","Control","type","placeholder","onChange","onFocus","onBlur","ListGroup","display","Item","action","NumberOfEvents","numberEvents","updateEventNumber","min","max","mockData","JSON","parse","stringify","kind","etag","status","created","updated","creator","self","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","startsWith","done","getAccessToken","token","url","axios","get","data","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","locationEvents","mounted","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install","Error"],"mappings":"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","file":"static/js/main.93ac66ee.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button, Card, Accordion } from 'react-bootstrap';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    buttonLabel: 'Show Details',\r\n  };\r\n\r\n  toggleshowingDetails = () => {\r\n    if (this.state.buttonLabel === 'Show Details') {\r\n      this.setState({\r\n        buttonLabel: 'Hide Details',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        buttonLabel: 'Show Details',\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { eventData } = this.props;\r\n    const { buttonLabel } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Accordion>\r\n              <Card className=\"Event\">\r\n                <Card.Header className=\"details\">\r\n                  <h2 className=\"title\">{eventData.summary}</h2>\r\n\r\n                  <div>Start: {eventData.start.dateTime}</div>\r\n                  <div> End: {eventData.end.dateTime}</div>\r\n                  <div>TimeZone: {eventData.start.timeZone}</div>\r\n\r\n                  <Accordion.Toggle\r\n                    as={Button}\r\n                    variant=\"link\"\r\n                    eventKey=\"0\"\r\n                    className=\"detailsButton\"\r\n                    onClick={this.toggleshowingDetails}\r\n                  >\r\n                    {buttonLabel}\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <Card.Body className=\"moreDetails\">\r\n                    <Card.Title>About Event</Card.Title>\r\n\r\n                    <Card.Text>\r\n                      {eventData.description}\r\n                      <Card.Subtitle>\r\n                        Contact:{' '}\r\n                        <a href=\"mailto:{eventData.organizer.email}\" target=\"_blank\" rel=\"noreferrer\">\r\n                          {eventData.organizer.email}\r\n                        </a>\r\n                      </Card.Subtitle>\r\n                      <Button variant=\"primary\" className=\"calendarLink\" href={eventData.htmlLink} target=\"_blank\">\r\n                        View in Google Calendar\r\n                      </Button>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event'; // in src/EventList.js\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events, number } = this.props;\r\n\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.slice(0, number).map((event) => (\r\n          <li key={event.id}>\r\n            <Event eventData={event} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  /**\r\n   *\r\n   * Shows the alert when infoText state(in CitySearch) contains text, otherwise it will not render\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontWeight: 'bold',\r\n      fontSize: '63%',\r\n    };\r\n  };\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontWeight: 'bold',\r\n      fontSize: '75%',\r\n    };\r\n  };\r\n}\r\nexport { ErrorAlert };\r\n\r\nexport { InfoAlert };\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, ListGroup } from 'react-bootstrap';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined,\r\n    infoText: '',\r\n  };\r\n\r\n  // handleInputChanged = (event) => {\r\n\r\n  //   const value = event.target.value;\r\n  //   this.setState({ showSuggestions: true });\r\n  //   const suggestions = this.props.locations.filter((location) => {\r\n  //     return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n  //   });\r\n  //   // this.setState({ query: value, suggestions });\r\n\r\n  //   if (suggestions.length === 0) {\r\n  //     this.setState({\r\n  //       showSuggestions: false,\r\n  //       query: value,\r\n  //       infoText: 'We can not find the city you are looking for. Please try another city',\r\n  //     });\r\n  //   } else {\r\n  //     return this.setState({\r\n  //       query: value,\r\n  //       suggestions,\r\n  //       infoText: '',\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  handleInputChanged = (event) => {\r\n    /*changes state of query and suggestions on change\r\nlike typing on the keyboard\r\n  */\r\n    const value = event.target.value;\r\n    this.setState({ showSuggestions: true });\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    }); /**filter the state of suggestions and use the result as the state’s new value */\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText: 'We can not find the city you are looking for. Please try another city',\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      suggestions: [],\r\n      showSuggestions: false,\r\n      infoText: '',\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <Form>\r\n          <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n            {this.state.infoText === '' ? (\r\n              <Form.Label column md=\"6\" className=\"resize\">\r\n                Search for events near you:\r\n              </Form.Label>\r\n            ) : (\r\n              <Form.Label column md=\"6\" className=\"resize\">\r\n                <InfoAlert text={this.state.infoText} />\r\n              </Form.Label>\r\n            )}\r\n            <Col md=\"6\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"city\"\r\n                placeholder=\"Search cities\"\r\n                value={this.state.query}\r\n                onChange={this.handleInputChanged}\r\n                onFocus={() => {\r\n                  this.setState({ showSuggestions: true });\r\n                }}\r\n                onBlur={() => {\r\n                  this.setState({ showSuggestions: false });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n        <ListGroup className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <ListGroup.Item\r\n              className=\"list-item\"\r\n              action\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >\r\n              {suggestion}\r\n            </ListGroup.Item>\r\n          ))}\r\n          <ListGroup.Item className=\"list-item\" action onClick={() => this.handleItemClicked('all')}>\r\n            See all cities\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col } from 'react-bootstrap';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numberEvents: 5,\r\n  };\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      numberEvents: value < 1 ? 0 : value,\r\n    });\r\n    this.props.updateEventNumber(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { numberEvents } = this.state;\r\n    return (\r\n      <div className=\"NumberOfEvents\">\r\n        <Form className=\"numberEventsInput\">\r\n          <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n            {this.state.numberEvents >= 1 ? (\r\n              <Form.Label column md=\"6\" className=\"resize\">\r\n                Number of Events:\r\n              </Form.Label>\r\n            ) : (\r\n              <Form.Label column md=\"6\" className=\"resize\">\r\n                <ErrorAlert text=\"Set number from 1 to 32\" />\r\n              </Form.Label>\r\n            )}\r\n            <Col md=\"6\">\r\n              <Form.Control\r\n                className=\"numEventInput\"\r\n                min=\"0\"\r\n                max=\"32\"\r\n                type=\"number\"\r\n                placeholder=\"Enter number of events to view\"\r\n                value={numberEvents}\r\n                onChange={this.handleInputChanged}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NumberOfEvents;\r\n","const mockDataJSON = [\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181161784712000\"',\r\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:17:46.000Z',\r\n    updated: '2020-05-27T12:01:32.356Z',\r\n    summary: 'Learn JavaScript',\r\n    description:\r\n      'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n    location: 'London, UK',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-19T17:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181159875584000\"',\r\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:14:30.000Z',\r\n    updated: '2020-05-27T11:45:37.792Z',\r\n    summary: 'React is Fun',\r\n    description:\r\n      'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\r\n    location: 'Berlin, Germany',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-20T15:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n];\r\nconst mockData = JSON.parse(JSON.stringify(mockDataJSON)); //converting the JSON array to an array of normal JS objects\r\nexport { mockData };\r\n","/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\nimport { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)]; //removes duplicates\r\n  return locations;\r\n};\r\n\r\n/**This function takes the accessToken you found and checks whether it’s a valid\r\n * token or not. If it’s not, then you\r\n * follow the redirect logic and send the user to the Google Authorization screen. */\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`)\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\nThis function takes your code and encodes it using encodeURIComponent, \r\nthen uses the encoded code to get your token\r\n */\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://1hjwzwtdhj.execute-api.us-west-1.amazonaws.com/dev/api/token/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem('access_token', access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\n/**\r\n * check whether there’s a path, then build the URL with the current path\r\n * (or build the URL without a path using window.history.pushState())\r\n */\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl = window.location.protocol + '//' + window.location.host + window.location.pathname;\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    newurl = window.location.protocol + '//' + window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://1hjwzwtdhj.execute-api.us-west-1.amazonaws.com/dev/api/get-events/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n      localStorage.setItem('locations', JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      const results = await axios.get('https://1hjwzwtdhj.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url');\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { extractLocations, getEvents } from './api';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './nprogress.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    number: 5,\r\n  };\r\n\r\n  componentDidMount() {\r\n    /**\r\n   * load events when the app loads.\r\n    make the API call and save the initial data to state\r\n   */\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        /**look at componentWillUnmount */\r\n        this.setState({ events, locations: extractLocations(events) });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    /*\r\n    to fix issue with unmounting before getEvents API call is finished, we\r\n    use this boolean to update the state only if this.mounted is true\r\n    */\r\n    this.mounted = false;\r\n  }\r\n\r\n  updateEvents = (location) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents = location === 'all' ? events : events.filter((event) => event.location === location);\r\n      this.setState({\r\n        events: locationEvents,\r\n      });\r\n    });\r\n  };\r\n\r\n  updateEventNumber = (numberEvents) => {\r\n    this.setState({\r\n      number: numberEvents,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"App\">\r\n              <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\r\n              <NumberOfEvents updateEventNumber={(value) => this.updateEventNumber(value)} />\r\n              <EventList events={this.state.events} number={this.state.number} />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// The entry point of my build\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App'; //importing App.js\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\nimport { notify } from 'atatus-spa';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\natatus.config('51ec6f3cfee249b5814f2bf3b1417d8b').install();\r\n// notify();\r\natatus.notify(new Error('Test Atatus Setup'));\r\n"],"sourceRoot":""}