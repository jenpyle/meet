{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","WelcomeScreen.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","buttonLabel","toggleshowingDetails","setState","eventData","this","props","Container","Row","Col","Accordion","Card","className","Body","Title","summary","Text","start","dateTime","end","timeZone","Toggle","as","Button","variant","eventKey","onClick","Collapse","description","Subtitle","href","target","rel","organizer","email","htmlLink","Component","EventList","events","number","slice","map","event","id","Alert","getStyle","color","style","text","InfoAlert","fontWeight","fontSize","background","ErrorAlert","WarningAlert","CitySearch","handleInputChanged","value","showSuggestions","suggestions","locations","filter","location","toUpperCase","indexOf","query","length","infoText","handleItemClicked","suggestion","updateEvents","undefined","Form","Group","controlId","Label","column","md","Control","type","placeholder","onChange","onFocus","ListGroup","display","Item","action","NumberOfEvents","numberEvents","updateEventNumber","min","max","mockData","JSON","parse","stringify","kind","etag","status","created","updated","creator","self","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","startsWith","done","navigator","onLine","data","getItem","getAccessToken","token","url","axios","get","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","WelcomeScreen","showWelcomeScreen","align","class","src","alt","App","offline","locationEvents","console","log","getData","city","split","shift","mounted","hostname","isTokenValid","offlineAlertText","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","XAxis","dataKey","name","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","fill","isLocalhost","Boolean","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install"],"mappings":"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","file":"static/js/main.ba47c866.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Row, Col, Button, Card, Accordion } from 'react-bootstrap';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    buttonLabel: 'Show Details',\r\n  };\r\n\r\n  toggleshowingDetails = () => {\r\n    if (this.state.buttonLabel === 'Show Details') {\r\n      this.setState({\r\n        buttonLabel: 'Hide Details',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        buttonLabel: 'Show Details',\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { eventData } = this.props;\r\n    const { buttonLabel } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Accordion>\r\n              <Card className=\"Event\">\r\n                <Card.Body className=\"details\">\r\n                  <Card.Title className=\"title\">{eventData.summary}</Card.Title>\r\n                  <Card.Text>\r\n                    Start: {eventData.start.dateTime}\r\n                    <br></br>\r\n                    End: {eventData.end.dateTime}\r\n                    <br></br>\r\n                    TimeZone: {eventData.start.timeZone}\r\n                  </Card.Text>\r\n                  <Accordion.Toggle\r\n                    as={Button}\r\n                    variant=\"link\"\r\n                    eventKey=\"0\"\r\n                    className=\"detailsButton\"\r\n                    onClick={this.toggleshowingDetails}\r\n                  >\r\n                    {buttonLabel}\r\n                  </Accordion.Toggle>\r\n                </Card.Body>\r\n\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <Card.Body className=\"moreDetails\">\r\n                    <Card.Title>About Event</Card.Title>\r\n\r\n                    <Card.Text>\r\n                      {eventData.description}\r\n                      <Card.Subtitle>\r\n                        Contact:{' '}\r\n                        <a href=\"mailto:{eventData.organizer.email}\" target=\"_blank\" rel=\"noreferrer\">\r\n                          {eventData.organizer.email}\r\n                        </a>\r\n                      </Card.Subtitle>\r\n                      <Button variant=\"primary\" className=\"calendarLink\" href={eventData.htmlLink} target=\"_blank\">\r\n                        View in Google Calendar\r\n                      </Button>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event'; // in src/EventList.js\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events, number } = this.props;\r\n\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.slice(0, number).map((event) => (\r\n          <li key={event.id}>\r\n            <Event eventData={event} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  /**\r\n   *\r\n   * Shows the alert when infoText state(in CitySearch) contains text, otherwise it will not render\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontWeight: 'bold',\r\n      fontSize: '63%',\r\n      background: 'rgba(169, 169, 169, .4)',\r\n      'border-radius': '10dpx',\r\n    };\r\n  };\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontWeight: 'bold',\r\n      fontSize: '75%',\r\n      background: 'rgba(169, 169, 169, .4)',\r\n      'border-radius': '5px',\r\n    };\r\n  };\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'yellow';\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontWeight: 'bolder',\r\n      fontSize: '75%',\r\n      background: 'rgba(169, 169, 169, .6)',\r\n      'border-radius': '60px',\r\n    };\r\n  };\r\n}\r\n\r\nexport { ErrorAlert, InfoAlert, WarningAlert };\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col, ListGroup } from 'react-bootstrap';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      query: '',\r\n      suggestions: [],\r\n      showSuggestions: undefined,\r\n      infoText: '',\r\n    };\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    /*changes state of query and suggestions on change\r\nlike typing on the keyboard\r\n  */\r\n    const value = event.target.value;\r\n    this.setState({ showSuggestions: true });\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    }); /**filter the state of suggestions and use the result as the state’s new value */\r\n    this.setState({ query: value, suggestions });\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText: 'We can not find the city you are looking for. Please try another city',\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      suggestions: [],\r\n      showSuggestions: false,\r\n      infoText: '',\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <Form>\r\n          <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n            {this.state.infoText === '' ? (\r\n              <Form.Label column md=\"6\" className=\"resize\">\r\n                Search for events near you:\r\n              </Form.Label>\r\n            ) : (\r\n              <Form.Label column md=\"6\" className=\"resize\">\r\n                <InfoAlert text={this.state.infoText} />\r\n              </Form.Label>\r\n            )}\r\n            <Col md=\"6\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"city\"\r\n                placeholder=\"Search cities\"\r\n                value={this.state.query}\r\n                onChange={this.handleInputChanged}\r\n                onFocus={() => {\r\n                  this.setState({ showSuggestions: true });\r\n                }}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n        <ListGroup className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <ListGroup.Item\r\n              className=\"list-item\"\r\n              action\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >\r\n              {suggestion}\r\n            </ListGroup.Item>\r\n          ))}\r\n          <ListGroup.Item className=\"list-item\" action onClick={() => this.handleItemClicked('all')}>\r\n            See all cities\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from 'react';\r\nimport { Form, Row, Col } from 'react-bootstrap';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numberEvents: 5,\r\n  };\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      numberEvents: value < 1 ? 0 : value,\r\n    });\r\n    this.props.updateEventNumber(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { numberEvents } = this.state;\r\n    return (\r\n      <div className=\"NumberOfEvents\">\r\n        <Form className=\"numberEventsInput\">\r\n          <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n            {this.state.numberEvents >= 1 ? (\r\n              <Form.Label column md=\"6\" className=\"resize\">\r\n                Number of Events:\r\n              </Form.Label>\r\n            ) : (\r\n              <Form.Label column md=\"6\" className=\"resize\">\r\n                <ErrorAlert text=\" Set number from 1 to 32 \" />\r\n              </Form.Label>\r\n            )}\r\n            <Col md=\"6\">\r\n              <Form.Control\r\n                className=\"numEventInput\"\r\n                min=\"0\"\r\n                max=\"32\"\r\n                type=\"number\"\r\n                placeholder=\"Enter number of events to view\"\r\n                value={numberEvents}\r\n                onChange={this.handleInputChanged}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NumberOfEvents;\r\n","const mockDataJSON = [\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181161784712000\"',\r\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:17:46.000Z',\r\n    updated: '2020-05-27T12:01:32.356Z',\r\n    summary: 'Learn JavaScript',\r\n    description:\r\n      'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n    location: 'London, UK',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-19T17:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181159875584000\"',\r\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:14:30.000Z',\r\n    updated: '2020-05-27T11:45:37.792Z',\r\n    summary: 'React is Fun',\r\n    description:\r\n      'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\r\n    location: 'Berlin, Germany',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-20T15:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n];\r\nconst mockData = JSON.parse(JSON.stringify(mockDataJSON)); //converting the JSON array to an array of normal JS objects\r\nexport { mockData };\r\n","/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\nimport { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)]; //removes duplicates\r\n  return locations;\r\n};\r\n\r\n/**This function takes the accessToken you found and checks whether it’s a valid\r\n * token or not. If it’s not, then you\r\n * follow the redirect logic and send the user to the Google Authorization screen. */\r\nexport const checkToken = async (accessToken) => {\r\n  const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`)\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\nThis function takes your code and encodes it using encodeURIComponent, \r\nthen uses the encoded code to get your token\r\n */\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://1hjwzwtdhj.execute-api.us-west-1.amazonaws.com/dev/api/token/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem('access_token', access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\n/**\r\n * check whether there’s a path, then build the URL with the current path\r\n * (or build the URL without a path using window.history.pushState())\r\n */\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl = window.location.protocol + '//' + window.location.host + window.location.pathname;\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    newurl = window.location.protocol + '//' + window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n  if (!navigator.onLine) {\r\n    const data = localStorage.getItem('lastEvents');\r\n    NProgress.done();\r\n    return data ? JSON.parse(data).events : [];\r\n  }\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://1hjwzwtdhj.execute-api.us-west-1.amazonaws.com/dev/api/get-events/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n      localStorage.setItem('locations', JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      const results = await axios.get('https://1hjwzwtdhj.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url');\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n","import React from 'react';\r\nimport './WelcomeScreen.css';\r\nfunction WelcomeScreen(props) {\r\n  return props.showWelcomeScreen ? (\r\n    <div className=\"WelcomeScreen\">\r\n      <h1>Welcome to the Meet app</h1>\r\n      <h4>Log in to see upcoming events around the world for full-stack developers</h4>\r\n      <div className=\"button_cont\" align=\"center\">\r\n        <div class=\"google-btn\">\r\n          <div class=\"google-icon-wrapper\">\r\n            <img\r\n              class=\"google-icon\"\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Log\r\no.svg\"\r\n              alt=\"Google sign-in\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            onClick={() => {\r\n              props.getAccessToken();\r\n            }}\r\n            rel=\"nofollow noopener\"\r\n            class=\"btn-text\"\r\n          >\r\n            <b>Sign in with google</b>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <a href=\"https://jenpyle.github.io/meet/privacy.html\" rel=\"nofollow noopener\">\r\n        Privacy policy\r\n      </a>\r\n    </div>\r\n  ) : null;\r\n}\r\nexport default WelcomeScreen;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { WarningAlert } from './Alert';\r\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './nprogress.css';\r\nimport WelcomeScreen from './WelcomeScreen';\r\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    number: 5,\r\n    offline: false,\r\n    showWelcomeScreen: undefined,\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   /**\r\n  //  * load events when the app loads.\r\n  //   make the API call and save the initial data to state\r\n  //  */\r\n  //   this.mounted = true;\r\n  //   getEvents().then((events) => {\r\n  //     if (this.mounted) {\r\n  //       /**look at componentWillUnmount */\r\n  //       this.setState({\r\n  //         events,\r\n  //         locations: extractLocations(events),\r\n  //       });\r\n  //     }\r\n  //   });\r\n  // }\r\n  async componentDidMount() {\r\n    /**\r\n   *load events when the app loads.\r\n    make the API call and save the initial data to state\r\n  */\r\n    this.mounted = true;\r\n    if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\r\n      getEvents().then((events) => {\r\n        if (this.mounted) {\r\n          this.setState({\r\n            events,\r\n            locations: extractLocations(events),\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      const accessToken = localStorage.getItem('access_token');\r\n      const isTokenValid = (await checkToken(accessToken)).error ? false : true;\r\n      const searchParams = new URLSearchParams(window.location.search);\r\n      const code = searchParams.get('code');\r\n      this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n      if ((code || isTokenValid) && this.mounted) {\r\n        getEvents().then((events) => {\r\n          if (this.mounted) {\r\n            this.setState({ events, locations: extractLocations(events) });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    /*\r\n    to fix issue with unmounting before getEvents API call is finished, we\r\n    use this boolean to update the state only if this.mounted is true\r\n    */\r\n    this.mounted = false;\r\n  }\r\n\r\n  updateEvents = (location) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents = location === 'all' ? events : events.filter((event) => event.location === location);\r\n      this.setState({\r\n        events: locationEvents,\r\n      });\r\n    });\r\n  };\r\n\r\n  updateEventNumber = (numberEvents) => {\r\n    console.log('navigator.onLine?=', navigator.onLine, '  this.state.offline=', this.state.offline);\r\n    this.setState({\r\n      number: numberEvents,\r\n    });\r\n  };\r\n\r\n  getData = () => {\r\n    /**Gets the number of events at locations\r\n   * uses the locations and events saved in your state from the Google Calendar API. \r\n    You then map the locations and filter the events by each location to get the length \r\n    of the resulting array. \r\n   */\r\n    const { locations, events } = this.state;\r\n    const data = locations.map((location) => {\r\n      const number = events.filter((event) => event.location === location).length;\r\n      /**split the location at the occurrence of a comma followed by a space \", \", which will return an array */\r\n      const city = location.split(', ').shift();\r\n      return { city, number };\r\n    });\r\n    return data;\r\n  };\r\n\r\n  render() {\r\n    // if (this.state.showWelcomeScreen === undefined) {\r\n    //   return <div className=\"App\" />;\r\n    // }\r\n    let offlineAlertText = '';\r\n    if (!navigator.onLine) {\r\n      offlineAlertText = 'You are currently offline. Event list may not be current.';\r\n    }\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"App\">\r\n              <WarningAlert text={offlineAlertText} />\r\n              <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\r\n              <NumberOfEvents updateEventNumber={(value) => this.updateEventNumber(value)} />\r\n              <h4>Events in each city</h4>\r\n\r\n              <ScatterChart\r\n                width={800}\r\n                height={400}\r\n                margin={{\r\n                  top: 20,\r\n                  right: 20,\r\n                  bottom: 20,\r\n                  left: 20,\r\n                }}\r\n              >\r\n                <CartesianGrid />\r\n                <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\r\n                <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\r\n                <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n                <Scatter data={this.getData()} fill=\"#8884d8\" />\r\n              </ScatterChart>\r\n              <EventList events={this.state.events} number={this.state.number} />\r\n              <WelcomeScreen\r\n                showWelcomeScreen={this.state.showWelcomeScreen}\r\n                getAccessToken={() => {\r\n                  getAccessToken();\r\n                }}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// The entry point of my build\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App'; //importing App.js\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n// import * as serviceWorker from './service-worker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\n// serviceWorker.unregister();\r\n// serviceWorker.register();\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\natatus.config('51ec6f3cfee249b5814f2bf3b1417d8b').install();\r\n// notify();\r\n// atatus.notify(new Error('Test Atatus Setup'));\r\n"],"sourceRoot":""}